from bs4 import BeautifulSoup

def find_repeated_text(html_content, start_text):
    # Parse the HTML content
    soup = BeautifulSoup(html_content, 'html.parser')

    # Find all text tags
    text_tags = soup.find_all(text=True)

    # Flag to indicate when to start recording text
    start_recording = False
    recorded_text = []

    # Iterate over all text tags
    for tag in text_tags:
        # Check if the tag matches the start text
        if tag.strip() == start_text:
            start_recording = True

        # If recording, add the tag to the recorded text
        if start_recording:
            recorded_text.append(tag.strip())

    # Count the occurrences of each text tag
    tag_counts = {}
    for tag in recorded_text:
        if tag in tag_counts:
            tag_counts[tag] += 1
        else:
            tag_counts[tag] = 1

    # Filter out text tags that are repeated more than once
    repeated_text_tags = {tag: count for tag, count in tag_counts.items() if count > 1}

    # Print the repeated text tags and their counts
    for tag, count in repeated_text_tags.items():
        print(f'Text: {tag} | Count: {count}')

# Example usage
with open('your_html_file.html', 'r') as file:
    html_content = file.read()

start_text = 'Your start text here'
find_repeated_text(html_content, start_text)



----_---



from bs4 import BeautifulSoup

# Read the HTML file
with open('your_html_file.html', 'r') as file:
    html_content = file.read()

# Parse the HTML content
soup = BeautifulSoup(html_content, 'html.parser')

# Find all text tags
text_tags = soup.find_all(text=True)

# Count the occurrences of each text tag
tag_counts = {}
for tag in text_tags:
    if tag in tag_counts:
        tag_counts[tag] += 1
    else:
        tag_counts[tag] = 1

# Filter out text tags that are repeated more than once
repeated_text_tags = {tag: count for tag, count in tag_counts.items() if count > 1}

# Print the repeated text tags and their counts
for tag, count in repeated_text_tags.items():
    print(f'Text: {tag.strip()} | Count: {count}')


-----
from bs4 import BeautifulSoup
import pandas as pd

def find_repeated_text(html_content, start_text):
    # Parse the HTML content
    soup = BeautifulSoup(html_content, 'html.parser')

    # Find all text tags
    text_tags = soup.find_all(text=True)

    # Flag to indicate when to start recording text
    start_recording = False
    recorded_text = []

    # Iterate over all text tags
    for tag in text_tags:
        # Check if the tag matches the start text
        if tag.strip() == start_text:
            start_recording = True

        # If recording, add the tag to the recorded text
        if start_recording:
            recorded_text.append(tag.strip())

    # Count the occurrences of each text tag
    tag_counts = {}
    for tag in recorded_text:
        if tag in tag_counts:
            tag_counts[tag] += 1
        else:
            tag_counts[tag] = 1

    # Create a DataFrame from the tag counts
    df = pd.DataFrame(list(tag_counts.items()), columns=['Text', 'Count'])

    # Filter out text tags that are repeated more than once
    repeated_text_tags = df[df['Count'] > 1]

    return repeated_text_tags

# Example usage
with open('your_html_file.html', 'r') as file:
    html_content = file.read()

start_text = 'Your start text here'
repeated_text_df = find_repeated_text(html_content, start_text)

# Print the DataFrame
print(repeated_text_df)


